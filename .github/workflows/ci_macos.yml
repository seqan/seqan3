name: SeqAn3 CI on macOS

on:
  push:
    branches:
      # Push events to branches matching refs/heads/master
      - 'master'
      # Push events to branches matching refs/heads/release*
      - 'release*'
  pull_request:
  # Enables a manual trigger, may run on any branch
  workflow_dispatch:

concurrency:
  group: macos-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  CMAKE_VERSION: 3.10.3
  SEQAN3_NO_VERSION_CHECK: 1
  TZ: Europe/Berlin

defaults:
  run:
    shell: bash -ex {0}

jobs:
  build:
    name: ${{ matrix.name }}
    runs-on: macos-10.15
    timeout-minutes: 120
    if: github.repository_owner == 'seqan' || github.event_name == 'workflow_dispatch'
    strategy:
      fail-fast: true
      matrix:
        include:
          - name: "Unit gcc11"
            os: macos-10.15
            cxx: "g++-11"
            cc: "gcc-11"
            build: unit
            build_type: Release

          - name: "Unit gcc10"
            os: macos-10.15
            cxx: "g++-10"
            cc: "gcc-10"
            build: unit
            build_type: Release

          - name: "Unit gcc9 (c++2a)"
            os: macos-10.15
            cxx: "g++-9"
            cc: "gcc-9"
            build: unit
            build_type: Release
            cxx_flags: "-std=c++2a"

    steps:
      - name: Checkout SeqAn3
        uses: actions/checkout@v2
        with:
          path: seqan3
          fetch-depth: 2
          submodules: true

      - name: Checkout SeqAn2
        uses: actions/checkout@v2
        with:
          repository: seqan/seqan
          ref: develop
          path: seqan3/submodules/seqan
          fetch-depth: 2

      - name: Configure Homebrew
        uses: Homebrew/actions/setup-homebrew@master

      - name: Install CMake
        run: bash ./seqan3/.github/workflows/scripts/install_cmake.sh

      - name: Install ccache
        run: bash ./seqan3/.github/workflows/scripts/install_via_brew.sh ccache

      - name: Install compiler ${{ matrix.cxx }}
        env:
          CC: ${{ matrix.cc }}
        run: bash ./seqan3/.github/workflows/scripts/install_via_brew.sh $(echo ${CC/clang/llvm} | awk -F '-' '{print $1, $2}')

      - name: Load ccache
        uses: actions/cache@v2
        with:
          path: .ccache
          key: ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}-${{ github.run_number }}
          # Restoring: From current branch, otherwise from base branch, otherwise from any branch.
          restore-keys: |
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-${{ github.base_ref }}
            ${{ runner.os }}-${{ matrix.name }}-ccache-

      - name: Tool versions
        run: |
          env cmake --version
          env ${{ matrix.cxx }} --version

      - name: Configure tests
        env:
          CXX: ${{ matrix.cxx }}
          CC: ${{ matrix.cc }}
        run: |
          mkdir seqan3-build
          cd seqan3-build
          cmake ../seqan3/test/${{ matrix.build }} -DCMAKE_BUILD_TYPE=${{ matrix.build_type }} \
                                                   -DCMAKE_CXX_FLAGS="${{ matrix.cxx_flags }}" \
                                                   -DSEQAN3_VERBOSE_TESTS=OFF \
                                                   -DSEQAN3_BENCHMARK_MIN_TIME=0.01
          make -j3 gtest_build

      - name: Build tests
        env:
          CCACHE_BASEDIR: ${{ github.workspace }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          CCACHE_COMPRESS: true
          CCACHE_COMPRESSLEVEL: 12
          CCACHE_MAXSIZE: 75M
        run: |
          ccache -z
          cd seqan3-build
          make -k -j3
          ccache -sv

      - name: Run tests
        run: |
          cd seqan3-build
          ctest . -j3 --output-on-failure
